{"version":3,"sources":["http-common.js","service/hackerService.js","service/commonService.js","component/Home.js","utils/TextError.js","component/Login.js","component/Register.js","utils/GaurdRoute.js","component/Landing.js","component/Detail.js","App.js","reportWebVitals.js","index.js"],"names":["http","axios","create","baseURL","headers","interceptors","request","use","config","accessToken","sessionStorage","getItem","error","Promise","reject","response","originalRequest","refreshToken","status","_retry","post","token","then","res","setItem","data","result","console","log","get","id","spinnerSub","BehaviorSubject","username","loggerIn","this","next","column","Header","accessor","Home","useState","hackerList","hackerListFn","history","useHistory","useEffect","commonService","hackerService","getAll","catch","err","useTable","columns","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canPreviousPage","canNextPage","pageOptions","state","gotoPage","pageCount","prepareRow","pageIndex","className","style","fontSize","cursor","title","map","headerGroup","getHeaderGroupProps","colun","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","onClick","original","hackerId","push","getRowProps","cells","cell","getCellProps","alt","value","src","disabled","length","TextError","props","display","children","initValue","email","password","validateSchema","Yup","required","Login","setError","success","setSuccess","initialValues","onSubmit","submitProp","signin","setSubmitting","message","resetForm","validationSchema","validateOnMount","validateOnChange","enableReinitialize","formik","htmlFor","errors","touched","type","name","component","submitForm","isValid","isSubmitting","to","matches","min","Register","signup","setTimeout","GuardedRoute","Component","auth","rest","Landing","isAuth","setIsAuth","e","subscribe","val","unsubscribe","Detail","hackerDetail","setHackerDetail","getById","match","params","Fragment","margin","overallRank","textAlign","alignItems","imageURl","marginTop","fontWeight","color","float","noOfVotes","followers","following","minWidth","width","challengeSolved","clear","location","education","deviceType","solutionSubmitted","competitive_Percentile","html","dataStructure","cpp","solutionAccepted","java","javascript","python","App","spinner","setSpinner","setUsername","loading","setLoading","c","d","logout","removeItem","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.911c0f29.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst http = axios.create({\r\n    baseURL: \"https://mysterious-headland-43478.herokuapp.com/\",\r\n    headers: {\r\n        \"content-type\": \"application/json\",\r\n    },\r\n\r\n})\r\n\r\nexport default http;\r\n\r\nhttp.interceptors.request.use(\r\n    (config) => {\r\n        const accessToken = sessionStorage.getItem(\"token\");\r\n        if (accessToken) {\r\n            config.headers[\"Authorization\"] = \"Bearer \" + accessToken;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        Promise.reject(error);\r\n    }\r\n)\r\n\r\nhttp.interceptors.response.use(\r\n    (response) => {\r\n        return response;\r\n    },\r\n    (error) => {\r\n        const originalRequest = error.config;\r\n        let refreshToken = sessionStorage.getItem(\"Rtoken\");\r\n        if (\r\n            refreshToken &&\r\n            error.response.status === 403 &&\r\n            !originalRequest._retry\r\n        ) {\r\n            originalRequest._retry = true;\r\n            return http\r\n                .post(`/user/refresh_token`, { token: refreshToken })\r\n                .then((res) => {\r\n                    if (res.status === 200) {\r\n                        sessionStorage.setItem(\"token\", res.data.result.accessToken);\r\n                        console.log(\"Access token refreshed!\");\r\n                        return http(originalRequest);\r\n                    }\r\n                });\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n)","import http from '../http-common'\r\n\r\nclass HackerService {\r\n\r\n    getAll() {\r\n        return http.get(\"/hacker/getall\")\r\n    }\r\n\r\n    signup(data) {\r\n        return http.post(\"/user/signup\", data)\r\n    }\r\n\r\n    signin(data) {\r\n        return http.post(\"/user/signin\", data)\r\n    }\r\n\r\n    getById(id){\r\n        return http.get('/hacker/'+id)\r\n    }\r\n\r\n    logout(token){\r\n        return http.post('/user/logout',{token})\r\n    }\r\n}\r\n\r\nexport default new HackerService()","import {BehaviorSubject} from \"rxjs\";\r\n\r\nclass CommonService {\r\n\r\n    spinnerSub = new BehaviorSubject(false)\r\n    username = new BehaviorSubject(\"\")\r\n    loggerIn = new BehaviorSubject(false)\r\n\r\n    constructor() {\r\n        var username = sessionStorage.getItem('username')\r\n        console.log(username);\r\n        if (username) {\r\n            this.loggerIn.next(true)\r\n            this.username.next(username)\r\n        } else {\r\n            this.loggerIn.next(false)\r\n            this.username.next(\"\")\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default new CommonService();","import React, { useEffect, useState } from 'react'\r\nimport { usePagination, useSortBy, useTable } from 'react-table';\r\nimport hackerService from \"../service/hackerService\";\r\nimport commonService from '../service/commonService'\r\nimport { useHistory } from 'react-router';\r\n\r\nconst column = [\r\n    {\r\n        Header: \"Hacker Image\",\r\n        accessor: \"imageURl\"\r\n    },\r\n    {\r\n        Header: \"Hacker Name\",\r\n        accessor: \"name\"\r\n    },\r\n    {\r\n        Header: \"Location\",\r\n        accessor: \"location\"\r\n    },\r\n    {\r\n        Header: \"Overall Rank\",\r\n        accessor: \"overallRank\"\r\n    },\r\n]\r\nfunction Home() {\r\n    const [hackerList, hackerListFn] = useState([])\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        commonService.spinnerSub.next(true)\r\n        hackerService.getAll().then(response => {\r\n            console.log(\"master\", response)\r\n            hackerListFn(response.data)\r\n            commonService.spinnerSub.next(false)\r\n        }).catch(err => {\r\n            console.log(err);\r\n            commonService.spinnerSub.next(false)\r\n        })\r\n    }, [])\r\n\r\n\r\n\r\n    const { getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        page,\r\n        nextPage,\r\n        previousPage,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        state,\r\n        gotoPage,\r\n        pageCount,\r\n        prepareRow\r\n    } = useTable({\r\n        columns: column,\r\n        data: hackerList,\r\n    }, useSortBy, usePagination)\r\n    const { pageIndex } = state\r\n\r\n    const navigate = (id) => {\r\n        history.push(\"/\" + id)\r\n    }\r\n    return (\r\n        <div className=\"p-2\">\r\n            <h3>Hacker List: <i className=\"fa fa-info-circle\" style={{ fontSize: \"23px\", cursor: \"pointer\" }} title=\"Click on Header to sort\"></i> </h3>\r\n            <table className=\"table table-hover border\" {...getTableProps()}>\r\n                <thead className=\"tableHeader\">\r\n                    {\r\n                        headerGroups.map(headerGroup => (\r\n                            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                {\r\n                                    headerGroup.headers.map(colun => (\r\n                                        <th {...colun.getHeaderProps(colun.getSortByToggleProps())}>{colun.render('Header') + ' '}\r\n                                            <span>\r\n                                                {colun.isSorted ? colun.isSortedDesc\r\n                                                    ? (<i className=\"fa fa-chevron-down\"></i>)\r\n                                                    : (<i className=\"fa fa-chevron-up\"></i>)\r\n                                                    : null}\r\n                                            </span>\r\n                                        </th>\r\n                                    ))\r\n                                }\r\n                            </tr>\r\n                        )\r\n\r\n                        )\r\n                    }\r\n\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {\r\n                        page.map(row => {\r\n                            prepareRow(row)\r\n                            return (\r\n                                <tr className=\"rowss\" onClick={() => {\r\n                                    console.log(row);\r\n                                    navigate(row.original.hackerId)\r\n                                }} {...row.getRowProps()}>\r\n                                    {\r\n                                        row.cells.map(cell => {\r\n                                            return <td {...cell.getCellProps()}>{cell.column.id === \"imageURl\" ? (<img alt={cell.value} className=\"image\" src={cell.value}></img>) : cell.render('Cell')}</td>\r\n                                        })\r\n                                    }\r\n\r\n                                </tr>\r\n                            )\r\n                        }\r\n                        )\r\n                    }\r\n\r\n                </tbody>\r\n            </table>\r\n            <div className=\"text-right pr-3 mb-2 page\">\r\n                <button className=\"btn\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n                    <i className=\"fa fa-chevron-left\" ></i>\r\n                    <i className=\"fa fa-chevron-left\" ></i>\r\n                </button>\r\n                <button className=\"btn\" onClick={previousPage} disabled={!canPreviousPage}>\r\n                    <i className=\"fa fa-chevron-left\" ></i>\r\n                </button>\r\n                <span>\r\n                    Page{' '}\r\n                    <strong>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </strong>{' '}\r\n                </span>\r\n                <button className=\"btn\" onClick={nextPage} disabled={!canNextPage}>\r\n                    <i className=\"fa fa-chevron-right\" ></i>\r\n                </button>\r\n                <button className=\"btn\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n                    <i className=\"fa fa-chevron-right\" ></i>\r\n                    <i className=\"fa fa-chevron-right\" ></i>\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\n\r\nfunction TextError(props) {\r\n    return (\r\n        <div className=\"invalid-feedback\" style={{ display: 'block' }}>\r\n            <i className=\"fa fa-exclamation-triangle\"></i> {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextError\r\n\r\n\r\n","import {ErrorMessage, Field, Formik} from 'formik'\r\nimport React, {useState} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport hackerService from '../service/hackerService';\r\nimport TextError from '../utils/TextError';\r\nimport * as Yup from 'yup'\r\nimport commonService from '../service/commonService';\r\n\r\nconst initValue = {\r\n    email: '',\r\n    password: ''\r\n}\r\n\r\n\r\n\r\nconst validateSchema = Yup.object({\r\n    email: Yup.string().required(\"Email is Required\").email(\"Invaid Format\"),\r\n    password: Yup.string().required(\"Password is Required\")\r\n})\r\n\r\n\r\nfunction Login() {\r\n    const [error, setError] = useState(\"\")\r\n    const [success, setSuccess] = useState(\"\")\r\n    const history = useHistory()\r\n\r\n\r\n    const onSubmit = (value, submitProp) => {\r\n        commonService.spinnerSub.next(true)\r\n        console.log(value, submitProp);\r\n        hackerService.signin(value).then(result => {\r\n            sessionStorage.setItem(\"token\", result.data.result.accessToken)\r\n            sessionStorage.setItem(\"Rtoken\", result.data.result.refreshToken)\r\n            sessionStorage.setItem(\"username\", result.data.result.username)\r\n            commonService.username.next(result.data.result.username)\r\n            setSuccess(\"Loggedin Successfully\")\r\n            commonService.loggerIn.next(true)\r\n            submitProp.setSubmitting(false)\r\n            commonService.spinnerSub.next(false)\r\n            history.push('/')\r\n        }).catch(error => {\r\n            console.log(error.response.data);\r\n            console.log(error.response.status);\r\n            setError(error.response.data.message)\r\n            commonService.spinnerSub.next(false)\r\n        })\r\n        submitProp.resetForm()\r\n\r\n    }\r\n    return (\r\n        <div className=\"login-container\">\r\n\r\n            <div className=\"header\">\r\n                <i className=\"fa fa-user\" style={{ fontSize: '18px' }}></i> Login\r\n            </div>\r\n            <div className=\"body\">\r\n                <Formik initialValues={initValue} onSubmit={onSubmit} validationSchema={validateSchema} validateOnMount\r\n                    validateOnChange={true} enableReinitialize>\r\n\r\n                    {\r\n                        formik => {\r\n                            return (\r\n                                <div>\r\n                                    {\r\n                                        error.length !== 0 ? (<div className=\"invalid-feedback errors\" style={{ display: 'block' }}>\r\n                                            {error}\r\n                                        </div>) : null\r\n\r\n                                    }\r\n                                    {\r\n                                        success.length !== 0 ? (<div className=\"success\">\r\n                                            {success}\r\n                                        </div>) : null\r\n\r\n                                    }\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"col-form-label\" htmlFor=\"email\">Email</label>\r\n                                        <Field className={\"form-control \" + (formik.errors.email && formik.touched.email ? 'is-invalid' : '')} type=\"text\" name=\"email\" />\r\n                                        <ErrorMessage name=\"email\" component={TextError} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"col-form-label\" htmlFor=\"email\">Password</label>\r\n                                        <Field className={\"form-control \" + (formik.errors.password && formik.touched.password ? 'is-invalid' : '')} type=\"password\" name=\"password\" />\r\n                                        <ErrorMessage name=\"password\" component={TextError} />\r\n                                    </div>\r\n                                    <div className=\"footer\">\r\n                                        <button type=\"button\" className=\"btn\" onClick={formik.submitForm}\r\n                                            disabled={!formik.isValid || formik.isSubmitting}>Sign in</button>\r\n                                        <div>No account? <Link to={\"/register\"}> <span>Create One</span></Link></div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }\r\n\r\n                </Formik>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import {ErrorMessage, Field, Formik} from 'formik'\r\nimport React, {useState} from 'react'\r\nimport hackerService from '../service/hackerService'\r\nimport TextError from '../utils/TextError'\r\nimport * as Yup from 'yup'\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport commonService from '../service/commonService'\r\n\r\n\r\nconst initValue = {\r\n    email: '',\r\n    password: '',\r\n    username: '',\r\n}\r\n\r\n\r\nconst validateSchema = Yup.object({\r\n    email: Yup.string().required(\"Email is Required\").email(\"Invaid Format\"),\r\n    password: Yup.string().required(\"Password is Required\").matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n        \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\r\n    ),\r\n    username: Yup.string().required().min(5, \"Must have 5 Characters\")\r\n})\r\n\r\nfunction Register() {\r\n    const [error, setError] = useState(\"\")\r\n    const [success, setSuccess] = useState(\"\")\r\n    const history = useHistory()\r\n\r\n    const onSubmit = (value, submitProp) => {\r\n        commonService.spinnerSub.next(true)\r\n        console.log(value, submitProp);\r\n        hackerService.signup(value).then(result => {\r\n            if (result.data.result) {\r\n                setSuccess(\"Created Successfully\")\r\n              \r\n            }\r\n            submitProp.setSubmitting(false)\r\n            commonService.spinnerSub.next(false)\r\n            setTimeout(() => {\r\n                history.push('/login')\r\n            }, 2000);\r\n        }).catch(error => {\r\n            console.log(error.response.data);\r\n            console.log(error.response.status);\r\n            setError(error.response.data.message)\r\n            commonService.spinnerSub.next(false)\r\n        })\r\n        submitProp.resetForm()\r\n\r\n    }\r\n    return (\r\n        <div className=\"login-container\">\r\n\r\n            <div className=\"header\">\r\n                <i className=\"fa fa-user\" style={{ fontSize: '18px' }} /> Register\r\n        </div>\r\n            <div className=\"body\">\r\n                <Formik initialValues={initValue} onSubmit={onSubmit} validationSchema={validateSchema} validateOnMount\r\n                    validateOnChange={true} enableReinitialize>\r\n\r\n                    {\r\n                        formik => {\r\n                            return (\r\n                                <div>\r\n                                    {\r\n                                        error.length !== 0 ? (<div className=\"invalid-feedback errors\" style={{ display: 'block' }}>\r\n                                            {error}\r\n                                        </div>) : null\r\n\r\n                                    }\r\n                                    {\r\n                                        success.length !== 0 ? (<div className=\"success\">\r\n                                            {success}\r\n                                        </div>) : null\r\n\r\n                                    }\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"col-form-label\" htmlFor=\"username\">Username</label>\r\n                                        <Field className={\"form-control \" + (formik.errors.username && formik.touched.username ? 'is-invalid' : '')} type=\"text\" name=\"username\" />\r\n                                        <ErrorMessage name=\"username\" component={TextError} />\r\n\r\n\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"col-form-label\" htmlFor=\"email\">Email</label>\r\n                                        <Field className={\"form-control \" + (formik.errors.email && formik.touched.email ? 'is-invalid' : '')} type=\"text\" name=\"email\" />\r\n                                        <ErrorMessage name=\"email\" component={TextError} />\r\n\r\n\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"col-form-label\" htmlFor=\"email\">Password</label>\r\n                                        <Field className={\"form-control \" + (formik.errors.password && formik.touched.password ? 'is-invalid' : '')} type=\"password\" name=\"password\" />\r\n                                        <ErrorMessage name=\"password\" component={TextError} />\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"footer\">\r\n                                        <button type=\"button\" className=\"btn\" onClick={formik.submitForm}\r\n                                            disabled={!formik.isValid || formik.isSubmitting}>Create Account</button>\r\n                                        <div>Have account? <Link to={\"/login\"}> <span>Login here!</span></Link></div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }\r\n\r\n                </Formik>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React from 'react';\r\nimport {Redirect, Route} from \"react-router-dom\";\r\n\r\nconst GuardedRoute = ({ component: Component, auth, ...rest }) => {\r\n    // const [isAuth, setIsAuth] = useState(false)\r\n    // useEffect(() => {\r\n    //     const e = commonService.loggerIn.subscribe(val => {\r\n    //         console.log(val);\r\n    //         setIsAuth(val)\r\n    //     })\r\n    //     return () => {\r\n    //         e.unsubscribe()\r\n    //     }\r\n    // }, [])\r\n    console.log(\"gacurd\", auth)\r\n\r\n    return (\r\n        <Route {...rest} render={(props) => (\r\n            auth === true\r\n                ? <Component {...props} />\r\n                : <Redirect to='/login' />\r\n        )} />\r\n    )\r\n}\r\n\r\nexport default GuardedRoute;","import React, { useEffect, useState } from 'react'\r\nimport commonService from '../service/commonService'\r\n\r\nfunction Landing() {\r\n\r\n    const [isAuth, setIsAuth] = useState(false)\r\n    useEffect(() => {\r\n        const e = commonService.loggerIn.subscribe(val => {\r\n            setIsAuth(val)\r\n        })\r\n        return () => {\r\n            e.unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"landingPage\">\r\n            <h1>\r\n                Welcome!!\r\n            </h1>\r\n         \r\n            <div className=\"about\">\r\n                <h4>\r\n                    About:\r\n                    </h4>\r\n                <p>\r\n                    &nbsp; &nbsp; &nbsp; &nbsp;  This Site helps to find hackers and there detailed achievement. Hackers have been ranked according to their performance in various fields [e.g., Solution Submitted, Programming].\r\n                    User can find it easy to view hackers in accending and decending order.                    \r\n                    </p>\r\n            </div>\r\n            {\r\n                !isAuth ? (<h3>\r\n                    Click on Login to Continue!!\r\n                </h3>) : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing\r\n","import React, { useEffect, useState } from 'react'\r\nimport commonService from '../service/commonService'\r\nimport hackerService from '../service/hackerService'\r\n\r\nfunction Detail(props) {\r\n    const [hackerDetail, setHackerDetail] = useState({})\r\n    useEffect(() => {\r\n        commonService.spinnerSub.next(true)\r\n        hackerService.getById(props.match.params.id).then(\r\n            result => {\r\n                setHackerDetail(result.data.data)\r\n                console.log(result.data.data);\r\n                commonService.spinnerSub.next(false)\r\n            }\r\n        ).catch(err => {\r\n            console.log(err);\r\n            commonService.spinnerSub.next(false)\r\n        })\r\n    }, [props.match.params.id])\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"detail\">\r\n                <section>\r\n                    <div style={{ margin: \"10px 60px\" }} className=\"text-center\">\r\n                        <span style={{ fontSize: '80px' }}>\r\n                            {hackerDetail.overallRank}\r\n                        </span>\r\n                        <div style={{ textAlign: \"center\", fontSize: \"24px\" }}>\r\n                            <i className=\"fa fa-trophy\"></i>&nbsp;\r\n                            Rank\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section className=\"nameDetail\">\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <div className=\"p-1 image-box\">\r\n                            <img src={hackerDetail.imageURl} className=\"image\" alt=\"Image of Hacker\" />\r\n                        </div>\r\n                        <div className=\"ml-lg-5 ml-md-5 ml-sm-1\" style={{ marginTop: \"-25px\" }}>\r\n                            <div style={{ fontSize: \"60px\", fontWeight: '500' }}>\r\n                                {hackerDetail.name}\r\n                            </div>\r\n                            <div className=\"mt-3\">\r\n                                <span style={{ fontSize: '27px', color: '#4f4f4f' }}>\r\n                                    Votes\r\n                            </span>\r\n                                <span className=\"mt-1\" style={{ fontSize: '24px', float: 'right', fontWeight: '600', color: '#4f4f4f' }}>\r\n                                    {hackerDetail.noOfVotes}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"ml-lg-5 ml-md-5 ml-sm-1 text-center\">\r\n                        <div style={{ fontSize: '30px', fontWeight: '600', color: '#4f4f4f' }}>\r\n                            Followers\r\n                        </div>\r\n                        <div style={{ fontSize: '24px', fontWeight: '600', color: '#4f4f4f' }}>\r\n                            {hackerDetail.followers}\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"ml-lg-5 ml-md-5 ml-sm-1 text-center\">\r\n                        <div style={{ fontSize: '30px', fontWeight: '600', color: '#4f4f4f' }}>\r\n                            Following\r\n                        </div>\r\n                        <div style={{ fontSize: '24px', fontWeight: '600', color: '#4f4f4f' }}>\r\n                            {hackerDetail.following}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n            </div>\r\n            <div className=\"detail\">\r\n                <section style={{ minWidth: '350px', alignItems: 'start' }}>\r\n                    <div style={{ width: '100%' }}>\r\n                        <div>\r\n                            <span className=\"float-left\">\r\n                                Challenge Solved:\r\n                            </span>\r\n                            <span className=\"float-right\">\r\n\r\n                                {hackerDetail.challengeSolved}\r\n                            </span>\r\n                            <div style={{ clear: 'both' }}></div>\r\n                        </div>\r\n                        <hr className=\"hori\" />\r\n                        <div>\r\n                            <span className=\"float-left\">\r\n                                Location:\r\n\r\n                            </span>\r\n                            <span className=\"float-right\">\r\n\r\n                                {hackerDetail.location}\r\n                            </span>\r\n                            <div style={{ clear: 'both' }}></div>\r\n                        </div>\r\n                        <hr className=\"hori\" />\r\n                        <div>\r\n                            <span className=\"float-left\">\r\n                                Education:\r\n\r\n                            </span>\r\n                            <span className=\"float-right\">\r\n\r\n                                {hackerDetail.education}\r\n                            </span>\r\n                            <div style={{ clear: 'both' }}></div>\r\n                        </div>\r\n                        <hr className=\"hori\" />\r\n                        <div>\r\n                            <span className=\"float-left\">\r\n                                Device Type:\r\n\r\n                            </span>\r\n                            <span className=\"float-right\">\r\n\r\n                                {hackerDetail.deviceType}\r\n                            </span>\r\n                            <div style={{ clear: 'both' }}></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </section>\r\n                <section>\r\n                    <div className=\"competi\">\r\n                        <div>\r\n                            <span>\r\n                                Solution Submitted\r\n                            </span>\r\n                            <div className=\"percent\">\r\n                                {hackerDetail.solutionSubmitted}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <span>\r\n                                HTML\r\n                            </span>\r\n                            <div className=\"percent\">\r\n                                {hackerDetail.competitive_Percentile && hackerDetail.competitive_Percentile.html}&nbsp;%\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <span>\r\n                                Data Structure\r\n                            </span>\r\n                            <div className=\"percent\">\r\n                                {hackerDetail.competitive_Percentile && hackerDetail.competitive_Percentile.dataStructure}&nbsp;%\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <span>\r\n                                C++\r\n                            </span>\r\n                            <div className=\"percent\">\r\n                                {hackerDetail.competitive_Percentile && hackerDetail.competitive_Percentile.cpp}&nbsp;%\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"competi\">\r\n                        <div>\r\n                            <span>\r\n                                Solution Accepted\r\n                            </span>\r\n                            <div className=\"percent\">\r\n                                {hackerDetail.solutionAccepted}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <span>\r\n                                Java\r\n                            </span>\r\n                            <div className=\"percent\">\r\n                                {hackerDetail.competitive_Percentile && hackerDetail.competitive_Percentile.java}&nbsp;%\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <span>\r\n                                Javascript\r\n                            </span>\r\n                            <div className=\"percent\">\r\n                                {hackerDetail.competitive_Percentile && hackerDetail.competitive_Percentile.javascript}&nbsp;%\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <span>\r\n                                Python\r\n                            </span>\r\n                            <div className=\"percent\">\r\n                                {hackerDetail.competitive_Percentile && hackerDetail.competitive_Percentile.python}&nbsp;%\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Detail\r\n","import './App.scss';\nimport Home from './component/Home';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'font-awesome/css/font-awesome.css'\nimport {Route, Switch} from 'react-router';\nimport Login from './component/Login';\nimport Register from \"./component/Register\";\nimport {Link} from 'react-router-dom';\nimport hackerService from './service/hackerService';\nimport React, {useEffect, useState} from 'react';\nimport commonService from './service/commonService';\nimport GuardedRoute from './utils/GaurdRoute';\nimport Landing from './component/Landing';\nimport Detail from './component/Detail';\n\n\nfunction App() {\n    const [spinner, setSpinner] = useState(false)\n    const [username, setUsername] = useState(\"\")\n    const [isAuth, setIsAuth] = useState(null)\n    const [loading, setLoading] = useState(true)\n\n\n    const logout = () => {\n        hackerService.logout(sessionStorage.getItem('Rtoken')).then(\n            res => {\n                console.log(res, \"success\");\n                sessionStorage.removeItem('token')\n                sessionStorage.removeItem('username')\n                sessionStorage.removeItem('Rtoken')\n                commonService.username.next(\"\")\n                commonService.loggerIn.next(false)\n            }\n        ).catch(err => {\n            console.log(err);\n        })\n    }\n    useEffect(() => {\n        const c = commonService.spinnerSub.subscribe(val => {\n            setSpinner(val)\n        })\n        const d = commonService.username.subscribe(val => {\n            setUsername(val)\n        })\n        const e = commonService.loggerIn.subscribe(val => {\n            console.log(val, \"isAuth\");\n            setIsAuth(val)\n        })\n        setTimeout(() => {\n            setLoading(false)\n        }, 1000);\n\n        return () => {\n            c.unsubscribe()\n            d.unsubscribe()\n            e.unsubscribe()\n        }\n    }, [])\n\n    if (loading) {\n        return (<div className=\"whole\"><div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div></div>)\n    } else {\n        return (\n            <div className=\"appjs\">\n                {\n                    spinner ? (<div className=\"whole\"><div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div></div>) : null\n\n                }\n                <div className=\"navigation\">\n                    <div className=\"navbar-header\">\n                        <div>\n                            <Link to={\"/\"}>\n                                <img src=\"./logo.svg\" alt=\"Navigate to Home\" />\n                            </Link>\n                        </div>\n                        <div>\n                            {\n                                !isAuth ? (\n                                    <React.Fragment>\n                                        <Link to={\"/login\"}>\n                                            <div className=\"items\">\n                                                <i className=\"fa fa-user\"></i><span>Login</span>\n                                            </div>\n                                        </Link>\n                                        <Link to={\"/register\"}>\n                                            <div className=\"items\">\n                                                <i className=\"fa fa-user-plus\"></i><span>Register</span>\n                                            </div>\n                                        </Link>\n                                    </React.Fragment>\n                                ) : (\n                                    <React.Fragment>\n                                        <Link to={\"/hackerlist\"}>\n                                            <div className=\"items\">\n                                                <span>Hacker Lists</span>\n                                            </div>\n                                        </Link>\n                                        <div className=\"items\"><i className=\"fa fa-user-circle\" style={{fontSize:\"18px\"}}></i>{' '+username}</div>\n                                        <div onClick={logout} className=\"items\">\n                                            <i className=\"fa fa-power-off\"></i> <span>Logout</span></div>\n                                    </React.Fragment>\n                                )\n                            }\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"react-body\">\n                    <Switch>\n                        <Route path=\"/\" exact component={Landing}></Route>\n                        <Route path=\"/login\"><Login /></Route>\n                        <Route path=\"/register\"><Register /></Route>\n                        <GuardedRoute path=\"/hackerlist\" exact auth={isAuth} component={Home}></GuardedRoute>\n                        <GuardedRoute path=\"/:id\" exact auth={isAuth} component={Detail}></GuardedRoute>\n                    </Switch>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}